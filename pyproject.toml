[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "edpm-lite"
version = "1.0.0"
description = "EDPM Lite - Edge Data Processing and Monitoring framework for IoT and Industrial Applications"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "EDPM Team", email = "info@example.com"}
]
maintainers = [
    {name = "EDPM Team", email = "info@example.com"}
]
keywords = ["iot", "industrial", "monitoring", "edge-computing", "protocols", "gpio", "i2c", "i2s", "rs485", "modbus"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Manufacturing",
    "Topic :: System :: Hardware",
    "Topic :: System :: Networking",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: POSIX :: Linux",
]
requires-python = ">=3.8"
dependencies = [
    "pyzmq>=24.0.0",
    "aiohttp>=3.8.0",
    "websockets>=11.0.0",
    "websocket-client>=1.6.0",
]

[project.optional-dependencies]
gpio = [
    "RPi.GPIO>=0.7.1; platform_machine=='armv7l'",
    "gpiozero>=1.6.0; platform_machine=='armv7l'",
]
i2c = [
    "smbus2>=0.4.0; platform_system=='Linux'",
]
i2s = [
    "pyaudio>=0.2.11",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
]
rs485 = [
    "pyserial>=3.5",
    "minimalmodbus>=2.0.1",
]
all = [
    "RPi.GPIO>=0.7.1; platform_machine=='armv7l'",
    "gpiozero>=1.6.0; platform_machine=='armv7l'",
    "smbus2>=0.4.0; platform_system=='Linux'",
    "pyaudio>=0.2.11",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "pyserial>=3.5",
    "minimalmodbus>=2.0.1",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]

[project.urls]
Homepage = "https://github.com/stream-ware/edpm"
Documentation = "https://github.com/stream-ware/edpm/blob/main/README.md"
Repository = "https://github.com/stream-ware/edpm"
Issues = "https://github.com/stream-ware/edpm/issues"

[project.scripts]
edpm-server = "edpm.cli:server_main"
edpm-client = "edpm.cli:client_main"
edpm-dashboard = "edpm.cli:dashboard_main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["edpm*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
edpm = ["web/static/*", "web/templates/*", "config/*.json"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "hardware: marks tests that require hardware",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "RPi.*",
    "smbus2",
    "pyaudio",
    "minimalmodbus",
    "gpiozero",
    "serial.*"
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["src/edpm"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
